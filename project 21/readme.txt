Schnorr-Batch签名方案是一种基于Schnorr签名的批量签名方案，它允许同时对多个消息进行签名，并生成相应的聚合签名。此方案的优点是在批量签名过程中实现高效的计算和通信。由于使用了聚合签名，相比于逐个独立签名，可以大幅减少签名的大小以及验证的开销。此外，该方案还具有简洁、安全和隐私性高的特点，因此被广泛应用于多方协作密钥生成、区块链交易等领域。
下面是其具体原理：

1.密钥生成：
选择一个大素数p和一个生成元g，确保p是一个安全的素数。
随机选择一个私钥x，范围在[1, p-1]之间，并计算对应的公钥Y = g^x mod p。

2.签名生成：
对于每个要签名的消息m_i，执行以下步骤：
随机选择一个挑战数k_i，范围在[1, p-1]之间。
计算R_i = g^k_i mod p。
计算挑战哈希值e_i = Hash(m_i || R_i)。
计算响应值s_i = (k_i + x * e_i) mod (p-1)。
聚合所有的响应值s_i，得到聚合的响应S = sum(s_i) mod (p-1)。

3.聚合签名输出：
使用第一个签名中的R_1和聚合的响应S作为聚合签名的输出。

4.验证：
对于每个签名的消息-响应对(m_i, s_i)，执行以下步骤：
计算挑战哈希值e_i = Hash(m_i || R_i)。
计算验证值v_i = (g^(s_i) * Y^(e_i)) mod p。
如果所有的验证值v_i都等于对应的R_i，则验证通过；否则，验证失败。

具体代码详见py文件